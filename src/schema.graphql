# import Chat from './generated/prisma.graphql'
# import Message from './generated/prisma.graphql'

# Define type User with password field removed
type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  friends: [User!]!
}

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  user: User!
  chat(chatId: ID!): Chat!
}

type Mutation {
  signup(
    email: String!
    firstName: String!
    lastName: String!
    password: String!
  ): AuthPayload!
  signin(email: String!, password: String!): AuthPayload!
  addFriend(friendId: ID!): User!
  changeUserName(firstName: String!, lastName: String!): User!
  # Think about verification, maybe add pass arg / email verification?
  changeUserEmail(email: String!): User!
  # members = Array of user (friend) IDs
  # members should not contain the current user's ID
  # title = Optional chat title
  startChat(memberIds: [ID!]!, title: String): Chat!
  updateChatTitle(chatId: ID!, newTitle: String!): Chat!
  addMemberToChat(chatId: ID!, userId: ID!): Chat!
  sendMessageToChat(chatId: ID!, content: String!): Chat!
}
